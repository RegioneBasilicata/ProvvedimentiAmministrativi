'------------------------------------------------------------------------------
' <auto-generated>
'     Il codice è stato generato da uno strumento.
'     Versione runtime:2.0.50727.5466
'
'     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
'     il codice viene rigenerato.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Codice sorgente generato automaticamente da wsdl, versione=2.0.50727.3038.
'

Namespace WSMergePDFProxy

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Web.Services.WebServiceBindingAttribute(Name:="ServiceMergePDFSoap", [Namespace]:="http://intemaweb.com/")> _
    Partial Public Class ServiceMergePDF
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol

        Private MergeFileOperationCompleted As System.Threading.SendOrPostCallback

        Private GetFileToPrintOperationCompleted As System.Threading.SendOrPostCallback

        '''<remarks/>
        Public Sub New()
            MyBase.New()
            Me.Timeout = System.Threading.Timeout.Infinite
            Me.Url = ConfigurationManager.AppSettings("WSMergePDF")
        End Sub

        '''<remarks/>
        Public Event MergeFileCompleted As MergeFileCompletedEventHandler

        '''<remarks/>
        Public Event GetFileToPrintCompleted As GetFileToPrintCompletedEventHandler

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://intemaweb.com/MergeFile", RequestNamespace:="http://intemaweb.com/", ResponseNamespace:="http://intemaweb.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function MergeFile(ByVal codOp As String, ByVal codDocumento As String, ByVal fraseInTrasparenza As String) As String
            Dim results() As Object = Me.Invoke("MergeFile", New Object() {codOp, codDocumento, fraseInTrasparenza})
            Return CType(results(0), String)
        End Function

        '''<remarks/>
        Public Function BeginMergeFile(ByVal codOp As String, ByVal codDocumento As String, ByVal fraseInTrasparenza As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("MergeFile", New Object() {codOp, codDocumento, fraseInTrasparenza}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndMergeFile(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), String)
        End Function

        '''<remarks/>
        Public Overloads Sub MergeFileAsync(ByVal codOp As String, ByVal codDocumento As String, ByVal fraseInTrasparenza As String)
            Me.MergeFileAsync(codOp, codDocumento, fraseInTrasparenza, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub MergeFileAsync(ByVal codOp As String, ByVal codDocumento As String, ByVal fraseInTrasparenza As String, ByVal userState As Object)
            If (Me.MergeFileOperationCompleted Is Nothing) Then
                Me.MergeFileOperationCompleted = AddressOf Me.OnMergeFileOperationCompleted
            End If
            Me.InvokeAsync("MergeFile", New Object() {codOp, codDocumento, fraseInTrasparenza}, Me.MergeFileOperationCompleted, userState)
        End Sub

        Private Sub OnMergeFileOperationCompleted(ByVal arg As Object)
            If (Not (Me.MergeFileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MergeFileCompleted(Me, New MergeFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://intemaweb.com/GetFileToPrint", RequestNamespace:="http://intemaweb.com/", ResponseNamespace:="http://intemaweb.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function GetFileToPrint(ByVal codOp As String, ByVal codDocumento As String, ByVal fraseInTrasparenza As String, ByVal codAllegatoToPrint As String) As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("GetFileToPrint", New Object() {codOp, codDocumento, fraseInTrasparenza, codAllegatoToPrint})
            Return CType(results(0), Byte())
        End Function

        '''<remarks/>
        Public Function BeginGetFileToPrint(ByVal codOp As String, ByVal codDocumento As String, ByVal fraseInTrasparenza As String, ByVal codAllegatoToPrint As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetFileToPrint", New Object() {codOp, codDocumento, fraseInTrasparenza, codAllegatoToPrint}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndGetFileToPrint(ByVal asyncResult As System.IAsyncResult) As Byte()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), Byte())
        End Function

        '''<remarks/>
        Public Overloads Sub GetFileToPrintAsync(ByVal codOp As String, ByVal codDocumento As String, ByVal fraseInTrasparenza As String, ByVal codAllegatoToPrint As String)
            Me.GetFileToPrintAsync(codOp, codDocumento, fraseInTrasparenza, codAllegatoToPrint, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub GetFileToPrintAsync(ByVal codOp As String, ByVal codDocumento As String, ByVal fraseInTrasparenza As String, ByVal codAllegatoToPrint As String, ByVal userState As Object)
            If (Me.GetFileToPrintOperationCompleted Is Nothing) Then
                Me.GetFileToPrintOperationCompleted = AddressOf Me.OnGetFileToPrintOperationCompleted
            End If
            Me.InvokeAsync("GetFileToPrint", New Object() {codOp, codDocumento, fraseInTrasparenza, codAllegatoToPrint}, Me.GetFileToPrintOperationCompleted, userState)
        End Sub

        Private Sub OnGetFileToPrintOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFileToPrintCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFileToPrintCompleted(Me, New GetFileToPrintCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub MergeFileCompletedEventHandler(ByVal sender As Object, ByVal e As MergeFileCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class MergeFileCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), String)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub GetFileToPrintCompletedEventHandler(ByVal sender As Object, ByVal e As GetFileToPrintCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class GetFileToPrintCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Byte())
            End Get
        End Property
    End Class
End Namespace
